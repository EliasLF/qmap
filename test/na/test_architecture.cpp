//
// This file is part of the MQT QMAP library released under the MIT license.
// See README.md or go to https://github.com/cda-tum/qmap for more information.
//

#include "Architecture.hpp"
#include "operations/OpType.hpp"

#include "gtest/gtest.h"
#include <fstream>
#include <random>
#include <sstream>
#include <string>

constexpr const char* ARCH_FN = "arch.json";
constexpr const char* GRID_FN = "grid.csv";

class TestNAArchitecture : public testing::Test {
protected:
  void SetUp() override {
    // write content to a file
    std::ofstream archF(ARCH_FN);
    archF << "{\n"
             "  \"name\": \"Nature\",\n"
             "  \"initialZones\": [\n"
             "    \"storage\"\n"
             "  ],\n"
             "  \"zones\": [\n"
             "    {\n"
             "      \"name\": \"entangling\",\n"
             "      \"xmin\": -12,\n"
             "      \"xmax\": 126,\n"
             "      \"ymin\": -12,\n"
             "      \"ymax\": 31,\n"
             "      \"fidelity\": 0.999\n"
             "    },\n"
             "    {\n"
             "      \"name\": \"storage\",\n"
             "      \"xmin\": -12,\n"
             "      \"xmax\": 126,\n"
             "      \"ymin\": 32,\n"
             "      \"ymax\": 89,\n"
             "      \"fidelity\": 0.99\n"
             "    },\n"
             "    {\n"
             "      \"name\": \"readout\",\n"
             "      \"xmin\": -12,\n"
             "      \"xmax\": 126,\n"
             "      \"ymin\": 90,\n"
             "      \"ymax\": 104,\n"
             "      \"fidelity\": 0.95\n"
             "    }\n"
             "  ],\n"
             "  \"operations\": [\n"
             "    {\n"
             "      \"name\": \"rz\",\n"
             "      \"type\": \"local\",\n"
             "      \"zones\": [\n"
             "        \"storage\",\n"
             "        \"readout\"\n"
             "      ],\n"
             "      \"time\": 0.5,\n"
             "      \"fidelity\": 0.999\n"
             "    },\n"
             "    {\n"
             "      \"name\": \"ry\",\n"
             "      \"type\": \"global\",\n"
             "      \"zones\": [\n"
             "        \"storage\",\n"
             "        \"readout\"\n"
             "      ],\n"
             "      \"time\": 0.5,\n"
             "      \"fidelity\": 0.999\n"
             "    },\n"
             "    {\n"
             "      \"name\": \"cz\",\n"
             "      \"type\": \"global\",\n"
             "      \"zones\": [\n"
             "        \"entangling\"\n"
             "      ],\n"
             "      \"time\": 0.2,\n"
             "      \"fidelity\": 0.9959\n"
             "    },\n"
             "    {\n"
             "      \"name\": \"measure\",\n"
             "      \"type\": \"global\",\n"
             "      \"zones\": [\n"
             "        \"readout\"\n"
             "      ],\n"
             "      \"time\": 0.2,\n"
             "      \"fidelity\": 0.95\n"
             "    }\n"
             "  ],\n"
             "  \"decoherence\": {\n"
             "    \"t1\": 100000000,\n"
             "    \"t2\": 1500000\n"
             "  },\n"
             "  \"interactionRadius\": 3,\n"
             "  \"minAtomDistance\": 0.1,\n"
             "  \"AOD\": [\n"
             "    {\n"
             "      \"rows\": 5,\n"
             "      \"columns\": 5,\n"
             "      \"xmin\": -2.5,\n"
             "      \"xmax\": 2.5,\n"
             "      \"ymin\": -2.5,\n"
             "      \"ymax\": 2.5,\n"
             "      \"move\": {\n"
             "        \"speed\": 0.55,\n"
             "        \"fidelity\": 1\n"
             "      },\n"
             "      \"load\": {\n"
             "        \"time\": 20,\n"
             "        \"fidelity\": 1\n"
             "      },\n"
             "      \"store\": {\n"
             "        \"time\": 20,\n"
             "        \"fidelity\": 1\n"
             "      }\n"
             "    }\n"
             "  ]\n"
             "}\n";
    archF.close();
    std::ofstream gridF(GRID_FN);
    gridF << "address,x,y,zone,type\n"
             "0,2,0\n"
             "1,4,0\n"
             "2,14,0\n"
             "3,16,0\n"
             "4,26,0\n"
             "5,28,0\n"
             "6,38,0\n"
             "7,40,0\n"
             "8,50,0\n"
             "9,52,0\n"
             "10,62,0\n"
             "11,64,0\n"
             "12,74,0\n"
             "13,76,0\n"
             "14,86,0\n"
             "15,88,0\n"
             "16,98,0\n"
             "17,100,0\n"
             "18,110,0\n"
             "19,112,0\n"
             "20,2,6\n"
             "21,4,6\n"
             "22,14,6\n"
             "23,16,6\n"
             "24,26,6\n"
             "25,28,6\n"
             "26,38,6\n"
             "27,40,6\n"
             "28,50,6\n"
             "29,52,6\n"
             "30,62,6\n"
             "31,64,6\n"
             "32,74,6\n"
             "33,76,6\n"
             "34,86,6\n"
             "35,88,6\n"
             "36,98,6\n"
             "37,100,6\n"
             "38,110,6\n"
             "39,112,6\n"
             "40,2,12\n"
             "41,4,12\n"
             "42,14,12\n"
             "43,16,12\n"
             "44,26,12\n"
             "45,28,12\n"
             "46,38,12\n"
             "47,40,12\n"
             "48,50,12\n"
             "49,52,12\n"
             "50,62,12\n"
             "51,64,12\n"
             "52,74,12\n"
             "53,76,12\n"
             "54,86,12\n"
             "55,88,12\n"
             "56,98,12\n"
             "57,100,12\n"
             "58,110,12\n"
             "59,112,12\n"
             "60,2,18\n"
             "61,4,18\n"
             "62,14,18\n"
             "63,16,18\n"
             "64,26,18\n"
             "65,28,18\n"
             "66,38,18\n"
             "67,40,18\n"
             "68,50,18\n"
             "69,52,18\n"
             "70,62,18\n"
             "71,64,18\n"
             "72,74,18\n"
             "73,76,18\n"
             "74,86,18\n"
             "75,88,18\n"
             "76,98,18\n"
             "77,100,18\n"
             "78,110,18\n"
             "79,112,18\n"
             "80,0,44\n"
             "81,6,44\n"
             "82,12,44\n"
             "83,18,44\n"
             "84,24,44\n"
             "85,30,44\n"
             "86,36,44\n"
             "87,42,44\n"
             "88,48,44\n"
             "89,54,44\n"
             "90,60,44\n"
             "91,66,44\n"
             "92,72,44\n"
             "93,78,44\n"
             "94,84,44\n"
             "95,90,44\n"
             "96,96,44\n"
             "97,102,44\n"
             "98,108,44\n"
             "99,114,44\n"
             "100,0,50\n"
             "101,6,50\n"
             "102,12,50\n"
             "103,18,50\n"
             "104,24,50\n"
             "105,30,50\n"
             "106,36,50\n"
             "107,42,50\n"
             "108,48,50\n"
             "109,54,50\n"
             "110,60,50\n"
             "111,66,50\n"
             "112,72,50\n"
             "113,78,50\n"
             "114,84,50\n"
             "115,90,50\n"
             "116,96,50\n"
             "117,102,50\n"
             "118,108,50\n"
             "119,114,50\n"
             "120,0,56\n"
             "121,6,56\n"
             "122,12,56\n"
             "123,18,56\n"
             "124,24,56\n"
             "125,30,56\n"
             "126,36,56\n"
             "127,42,56\n"
             "128,48,56\n"
             "129,54,56\n"
             "130,60,56\n"
             "131,66,56\n"
             "132,72,56\n"
             "133,78,56\n"
             "134,84,56\n"
             "135,90,56\n"
             "136,96,56\n"
             "137,102,56\n"
             "138,108,56\n"
             "139,114,56\n"
             "140,0,62\n"
             "141,6,62\n"
             "142,12,62\n"
             "143,18,62\n"
             "144,24,62\n"
             "145,30,62\n"
             "146,36,62\n"
             "147,42,62\n"
             "148,48,62\n"
             "149,54,62\n"
             "150,60,62\n"
             "151,66,62\n"
             "152,72,62\n"
             "153,78,62\n"
             "154,84,62\n"
             "155,90,62\n"
             "156,96,62\n"
             "157,102,62\n"
             "158,108,62\n"
             "159,114,62\n"
             "160,0,68\n"
             "161,6,68\n"
             "162,12,68\n"
             "163,18,68\n"
             "164,24,68\n"
             "165,30,68\n"
             "166,36,68\n"
             "167,42,68\n"
             "168,48,68\n"
             "169,54,68\n"
             "170,60,68\n"
             "171,66,68\n"
             "172,72,68\n"
             "173,78,68\n"
             "174,84,68\n"
             "175,90,68\n"
             "176,96,68\n"
             "177,102,68\n"
             "178,108,68\n"
             "179,114,68\n"
             "180,0,74\n"
             "181,6,74\n"
             "182,12,74\n"
             "183,18,74\n"
             "184,24,74\n"
             "185,30,74\n"
             "186,36,74\n"
             "187,42,74\n"
             "188,48,74\n"
             "189,54,74\n"
             "190,60,74\n"
             "191,66,74\n"
             "192,72,74\n"
             "193,78,74\n"
             "194,84,74\n"
             "195,90,74\n"
             "196,96,74\n"
             "197,102,74\n"
             "198,108,74\n"
             "199,114,74\n"
             "200,0,80\n"
             "201,6,80\n"
             "202,12,80\n"
             "203,18,80\n"
             "204,24,80\n"
             "205,30,80\n"
             "206,36,80\n"
             "207,42,80\n"
             "208,48,80\n"
             "209,54,80\n"
             "210,60,80\n"
             "211,66,80\n"
             "212,72,80\n"
             "213,78,80\n"
             "214,84,80\n"
             "215,90,80\n"
             "216,96,80\n"
             "217,102,80\n"
             "218,108,80\n"
             "219,114,80\n"
             "220,0,86\n"
             "221,6,86\n"
             "222,12,86\n"
             "223,18,86\n"
             "224,24,86\n"
             "225,30,86\n"
             "226,36,86\n"
             "227,42,86\n"
             "228,48,86\n"
             "229,54,86\n"
             "230,60,86\n"
             "231,66,86\n"
             "232,72,86\n"
             "233,78,86\n"
             "234,84,86\n"
             "235,90,86\n"
             "236,96,86\n"
             "237,102,86\n"
             "238,108,86\n"
             "239,114,86\n"
             "240,0,92\n"
             "241,6,92\n"
             "242,12,92\n"
             "243,18,92\n"
             "244,24,92\n"
             "245,30,92\n"
             "246,36,92\n"
             "247,42,92\n"
             "248,48,92\n"
             "249,54,92\n"
             "250,60,92\n"
             "251,66,92\n"
             "252,72,92\n"
             "253,78,92\n"
             "254,84,92\n"
             "255,90,92\n"
             "256,96,92\n"
             "257,102,92\n"
             "258,108,92\n"
             "259,114,92\n"
             "\n";
    gridF.close();
  }
  void TearDown() override {
    std::remove(ARCH_FN);
    std::remove(GRID_FN);
  }
};

TEST_F(TestNAArchitecture, Import) {
  na::Architecture const arch(ARCH_FN, GRID_FN);

  EXPECT_EQ(arch.getNZones(), 3);
  EXPECT_EQ(arch.getNSites(), 260);
  EXPECT_EQ(arch.getName(), "Nature");
  EXPECT_EQ(arch.getZoneLabel(arch.getZoneOfSite(0)), "entangling");
}

TEST_F(TestNAArchitecture, GateApplicability) {
  na::Architecture const arch(ARCH_FN, GRID_FN);

  EXPECT_TRUE(arch.isAllowedGlobally({qc::OpType::RY, 0}, 1));
  EXPECT_TRUE(arch.isAllowedGlobally({qc::OpType::Z, 1}, 0));
  EXPECT_TRUE(arch.isAllowedLocally({qc::OpType::RZ, 0}, 1));
}
