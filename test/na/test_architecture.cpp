//
// This file is part of the MQT QMAP library released under the MIT license.
// See README.md or go to https://github.com/cda-tum/qmap for more information.
//

#include "Architecture.hpp"
#include "Configuration.hpp"
#include "operations/OpType.hpp"

#include "gtest/gtest.h"
#include <cstdio>
#include <fstream>
#include <optional>
#include <string>

class TestNAArchitecture : public testing::Test {
protected:
  na::Architecture arch;
  void             SetUp() override {
    // write content to a file
    std::istringstream archIS("{\n"
                                                      "    \"name\": \"Nature\",\n"
                                                      "    \"initialZones\": [\n"
                                                      "        \"storage\"\n"
                                                      "    ],\n"
                                                      "    \"zones\": [\n"
                                                      "        {\n"
                                                      "            \"name\": \"entangling\",\n"
                                                      "            \"xmin\": -300,\n"
                                                      "            \"xmax\": 656,\n"
                                                      "            \"ymin\": -10,\n"
                                                      "            \"ymax\": 46,\n"
                                                      "            \"fidelity\": 0.9959\n"
                                                      "        },\n"
                                                      "        {\n"
                                                      "            \"name\": \"storage\",\n"
                                                      "            \"xmin\": -300,\n"
                                                      "            \"xmax\": 656,\n"
                                                      "            \"ymin\": 47,\n"
                                                      "            \"ymax\": 121,\n"
                                                      "            \"fidelity\": 1\n"
                                                      "        },\n"
                                                      "        {\n"
                                                      "            \"name\": \"readout\",\n"
                                                      "            \"xmin\": -300,\n"
                                                      "            \"xmax\": 656,\n"
                                                      "            \"ymin\": 122,\n"
                                                      "            \"ymax\": 156,\n"
                                                      "            \"fidelity\": 0.99\n"
                                                      "        }\n"
                                                      "    ],\n"
                                                      "    \"operations\": [\n"
                                                      "        {\n"
                                                      "            \"name\": \"rz\",\n"
                                                      "            \"type\": \"local\",\n"
                                                      "            \"zones\": [\n"
                                                      "                \"entangling\",\n"
                                                      "                \"storage\",\n"
                                                      "                \"readout\"\n"
                                                      "            ],\n"
                                                      "            \"time\": 0.5,\n"
                                                      "            \"fidelity\": 0.999\n"
                                                      "        },\n"
                                                      "        {\n"
                                                      "            \"name\": \"ry\",\n"
                                                      "            \"type\": \"global\",\n"
                                                      "            \"zones\": [\n"
                                                      "                \"entangling\",\n"
                                                      "                \"storage\",\n"
                                                      "                \"readout\"\n"
                                                      "            ],\n"
                                                      "            \"time\": 0.5,\n"
                                                      "            \"fidelity\": 0.999\n"
                                                      "        },\n"
                                                      "        {\n"
                                                      "            \"name\": \"cz\",\n"
                                                      "            \"type\": \"global\",\n"
                                                      "            \"zones\": [\n"
                                                      "                \"entangling\"\n"
                                                      "            ],\n"
                                                      "            \"time\": 0.2,\n"
                                                      "            \"fidelity\": 0.9959\n"
                                                      "        },\n"
                                                      "        {\n"
                                                      "            \"name\": \"measure\",\n"
                                                      "            \"type\": \"global\",\n"
                                                      "            \"zones\": [\n"
                                                      "                \"readout\"\n"
                                                      "            ],\n"
                                                      "            \"time\": 0.2,\n"
                                                      "            \"fidelity\": 0.95\n"
                                                      "        }\n"
                                                      "    ],\n"
                                                      "    \"decoherence\": {\n"
                                                      "        \"t1\": 100000000,\n"
                                                      "        \"t2\": 1500000\n"
                                                      "    },\n"
                                                      "    \"interactionRadius\": 2,\n"
                                                      "    \"noInteractionRadius\": 5,\n"
                                                      "    \"minAtomDistance\": 1,\n"
                                                      "    \"shuttling\": [\n"
                                                      "        {\n"
                                                      "            \"rows\": 5,\n"
                                                      "            \"columns\": 5,\n"
                                                      "            \"xmin\": -2.5,\n"
                                                      "            \"xmax\": 2.5,\n"
                                                      "            \"ymin\": -2.5,\n"
                                                      "            \"ymax\": 2.5,\n"
                                                      "            \"move\": {\n"
                                                      "                \"speed\": 0.55,\n"
                                                      "                \"fidelity\": 1\n"
                                                      "            },\n"
                                                      "            \"load\": {\n"
                                                      "                \"time\": 20,\n"
                                                      "                \"fidelity\": 1\n"
                                                      "            },\n"
                                                      "            \"store\": {\n"
                                                      "                \"time\": 20,\n"
                                                      "                \"fidelity\": 1\n"
                                                      "            }\n"
                                                      "        }\n"
                                                      "    ]\n"
                                                      "}\n");
    std::istringstream gridIS(
        "x,y\n3,0\n13,0\n23,0\n33,0\n43,0\n53,0\n"
                    "63,0\n73,0\n83,0\n93,0\n103,0\n113,0\n123,0\n"
                    "133,0\n143,0\n153,0\n163,0\n173,0\n183,0\n193,0\n"
                    "203,0\n213,0\n223,0\n233,0\n243,0\n253,0\n263,0\n"
                    "273,0\n283,0\n293,0\n303,0\n313,0\n323,0\n333,0\n"
                    "343,0\n353,0\n3,12\n13,12\n23,12\n33,12\n43,12\n"
                    "53,12\n63,12\n73,12\n83,12\n93,12\n103,12\n113,12\n"
                    "123,12\n133,12\n143,12\n153,12\n163,12\n173,12\n183,12\n"
                    "193,12\n203,12\n213,12\n223,12\n233,12\n243,12\n253,12\n"
                    "263,12\n273,12\n283,12\n293,12\n303,12\n313,12\n323,12\n"
                    "333,12\n343,12\n353,12\n3,24\n13,24\n23,24\n33,24\n"
                    "43,24\n53,24\n63,24\n73,24\n83,24\n93,24\n103,24\n"
                    "113,24\n123,24\n133,24\n143,24\n153,24\n163,24\n173,24\n"
                    "183,24\n193,24\n203,24\n213,24\n223,24\n233,24\n243,24\n"
                    "253,24\n263,24\n273,24\n283,24\n293,24\n303,24\n313,24\n"
                    "323,24\n333,24\n343,24\n353,24\n3,36\n13,36\n23,36\n"
                    "33,36\n43,36\n53,36\n63,36\n73,36\n83,36\n93,36\n"
                    "103,36\n113,36\n123,36\n133,36\n143,36\n153,36\n163,36\n"
                    "173,36\n183,36\n193,36\n203,36\n213,36\n223,36\n233,36\n"
                    "243,36\n253,36\n263,36\n273,36\n283,36\n293,36\n303,36\n"
                    "313,36\n323,36\n333,36\n343,36\n353,36\n0,56\n5,56\n"
                    "10,56\n15,56\n20,56\n25,56\n30,56\n35,56\n40,56\n"
                    "45,56\n50,56\n55,56\n60,56\n65,56\n70,56\n75,56\n"
                    "80,56\n85,56\n90,56\n95,56\n100,56\n105,56\n110,56\n"
                    "115,56\n120,56\n125,56\n130,56\n135,56\n140,56\n145,56\n"
                    "150,56\n155,56\n160,56\n165,56\n170,56\n175,56\n180,56\n"
                    "185,56\n190,56\n195,56\n200,56\n205,56\n210,56\n215,56\n"
                    "220,56\n225,56\n230,56\n235,56\n240,56\n245,56\n250,56\n"
                    "255,56\n260,56\n265,56\n270,56\n275,56\n280,56\n285,56\n"
                    "290,56\n295,56\n300,56\n305,56\n310,56\n315,56\n320,56\n"
                    "325,56\n330,56\n335,56\n340,56\n345,56\n350,56\n355,56\n"
                    "0,61\n5,61\n10,61\n15,61\n20,61\n25,61\n30,61\n"
                    "35,61\n40,61\n45,61\n50,61\n55,61\n60,61\n65,61\n"
                    "70,61\n75,61\n80,61\n85,61\n90,61\n95,61\n100,61\n"
                    "105,61\n110,61\n115,61\n120,61\n125,61\n130,61\n135,61\n"
                    "140,61\n145,61\n150,61\n155,61\n160,61\n165,61\n170,61\n"
                    "175,61\n180,61\n185,61\n190,61\n195,61\n200,61\n205,61\n"
                    "210,61\n215,61\n220,61\n225,61\n230,61\n235,61\n240,61\n"
                    "245,61\n250,61\n255,61\n260,61\n265,61\n270,61\n275,61\n"
                    "280,61\n285,61\n290,61\n295,61\n300,61\n305,61\n310,61\n"
                    "315,61\n320,61\n325,61\n330,61\n335,61\n340,61\n345,61\n"
                    "350,61\n355,61\n0,66\n5,66\n10,66\n15,66\n20,66\n"
                    "25,66\n30,66\n35,66\n40,66\n45,66\n50,66\n55,66\n"
                    "60,66\n65,66\n70,66\n75,66\n80,66\n85,66\n90,66\n"
                    "95,66\n100,66\n105,66\n110,66\n115,66\n120,66\n125,66\n"
                    "130,66\n135,66\n140,66\n145,66\n150,66\n155,66\n160,66\n"
                    "165,66\n170,66\n175,66\n180,66\n185,66\n190,66\n195,66\n"
                    "200,66\n205,66\n210,66\n215,66\n220,66\n225,66\n230,66\n"
                    "235,66\n240,66\n245,66\n250,66\n255,66\n260,66\n265,66\n"
                    "270,66\n275,66\n280,66\n285,66\n290,66\n295,66\n300,66\n"
                    "305,66\n310,66\n315,66\n320,66\n325,66\n330,66\n335,66\n"
                    "340,66\n345,66\n350,66\n355,66\n0,71\n5,71\n10,71\n"
                    "15,71\n20,71\n25,71\n30,71\n35,71\n40,71\n45,71\n"
                    "50,71\n55,71\n60,71\n65,71\n70,71\n75,71\n80,71\n"
                    "85,71\n90,71\n95,71\n100,71\n105,71\n110,71\n115,71\n"
                    "120,71\n125,71\n130,71\n135,71\n140,71\n145,71\n150,71\n"
                    "155,71\n160,71\n165,71\n170,71\n175,71\n180,71\n185,71\n"
                    "190,71\n195,71\n200,71\n205,71\n210,71\n215,71\n220,71\n"
                    "225,71\n230,71\n235,71\n240,71\n245,71\n250,71\n255,71\n"
                    "260,71\n265,71\n270,71\n275,71\n280,71\n285,71\n290,71\n"
                    "295,71\n300,71\n305,71\n310,71\n315,71\n320,71\n325,71\n"
                    "330,71\n335,71\n340,71\n345,71\n350,71\n355,71\n0,76\n"
                    "5,76\n10,76\n15,76\n20,76\n25,76\n30,76\n35,76\n"
                    "40,76\n45,76\n50,76\n55,76\n60,76\n65,76\n70,76\n"
                    "75,76\n80,76\n85,76\n90,76\n95,76\n100,76\n105,76\n"
                    "110,76\n115,76\n120,76\n125,76\n130,76\n135,76\n140,76\n"
                    "145,76\n150,76\n155,76\n160,76\n165,76\n170,76\n175,76\n"
                    "180,76\n185,76\n190,76\n195,76\n200,76\n205,76\n210,76\n"
                    "215,76\n220,76\n225,76\n230,76\n235,76\n240,76\n245,76\n"
                    "250,76\n255,76\n260,76\n265,76\n270,76\n275,76\n280,76\n"
                    "285,76\n290,76\n295,76\n300,76\n305,76\n310,76\n315,76\n"
                    "320,76\n325,76\n330,76\n335,76\n340,76\n345,76\n350,76\n"
                    "355,76\n0,81\n5,81\n10,81\n15,81\n20,81\n25,81\n"
                    "30,81\n35,81\n40,81\n45,81\n50,81\n55,81\n60,81\n"
                    "65,81\n70,81\n75,81\n80,81\n85,81\n90,81\n95,81\n"
                    "100,81\n105,81\n110,81\n115,81\n120,81\n125,81\n130,81\n"
                    "135,81\n140,81\n145,81\n150,81\n155,81\n160,81\n165,81\n"
                    "170,81\n175,81\n180,81\n185,81\n190,81\n195,81\n200,81\n"
                    "205,81\n210,81\n215,81\n220,81\n225,81\n230,81\n235,81\n"
                    "240,81\n245,81\n250,81\n255,81\n260,81\n265,81\n270,81\n"
                    "275,81\n280,81\n285,81\n290,81\n295,81\n300,81\n305,81\n"
                    "310,81\n315,81\n320,81\n325,81\n330,81\n335,81\n340,81\n"
                    "345,81\n350,81\n355,81\n0,86\n5,86\n10,86\n15,86\n"
                    "20,86\n25,86\n30,86\n35,86\n40,86\n45,86\n50,86\n"
                    "55,86\n60,86\n65,86\n70,86\n75,86\n80,86\n85,86\n"
                    "90,86\n95,86\n100,86\n105,86\n110,86\n115,86\n120,86\n"
                    "125,86\n130,86\n135,86\n140,86\n145,86\n150,86\n155,86\n"
                    "160,86\n165,86\n170,86\n175,86\n180,86\n185,86\n190,86\n"
                    "195,86\n200,86\n205,86\n210,86\n215,86\n220,86\n225,86\n"
                    "230,86\n235,86\n240,86\n245,86\n250,86\n255,86\n260,86\n"
                    "265,86\n270,86\n275,86\n280,86\n285,86\n290,86\n295,86\n"
                    "300,86\n305,86\n310,86\n315,86\n320,86\n325,86\n330,86\n"
                    "335,86\n340,86\n345,86\n350,86\n355,86\n0,91\n5,91\n"
                    "10,91\n15,91\n20,91\n25,91\n30,91\n35,91\n40,91\n"
                    "45,91\n50,91\n55,91\n60,91\n65,91\n70,91\n75,91\n"
                    "80,91\n85,91\n90,91\n95,91\n100,91\n105,91\n110,91\n"
                    "115,91\n120,91\n125,91\n130,91\n135,91\n140,91\n145,91\n"
                    "150,91\n155,91\n160,91\n165,91\n170,91\n175,91\n180,91\n"
                    "185,91\n190,91\n195,91\n200,91\n205,91\n210,91\n215,91\n"
                    "220,91\n225,91\n230,91\n235,91\n240,91\n245,91\n250,91\n"
                    "255,91\n260,91\n265,91\n270,91\n275,91\n280,91\n285,91\n"
                    "290,91\n295,91\n300,91\n305,91\n310,91\n315,91\n320,91\n"
                    "325,91\n330,91\n335,91\n340,91\n345,91\n350,91\n355,91\n"
                    "0,96\n5,96\n10,96\n15,96\n20,96\n25,96\n30,96\n"
                    "35,96\n40,96\n45,96\n50,96\n55,96\n60,96\n65,96\n"
                    "70,96\n75,96\n80,96\n85,96\n90,96\n95,96\n100,96\n"
                    "105,96\n110,96\n115,96\n120,96\n125,96\n130,96\n135,96\n"
                    "140,96\n145,96\n150,96\n155,96\n160,96\n165,96\n170,96\n"
                    "175,96\n180,96\n185,96\n190,96\n195,96\n200,96\n205,96\n"
                    "210,96\n215,96\n220,96\n225,96\n230,96\n235,96\n240,96\n"
                    "245,96\n250,96\n255,96\n260,96\n265,96\n270,96\n275,96\n"
                    "280,96\n285,96\n290,96\n295,96\n300,96\n305,96\n310,96\n"
                    "315,96\n320,96\n325,96\n330,96\n335,96\n340,96\n345,96\n"
                    "350,96\n355,96\n0,101\n5,101\n10,101\n15,101\n20,101\n"
                    "25,101\n30,101\n35,101\n40,101\n45,101\n50,101\n55,101\n"
                    "60,101\n65,101\n70,101\n75,101\n80,101\n85,101\n90,101\n"
                    "95,101\n100,101\n105,101\n110,101\n115,101\n120,101\n125,101\n"
                    "130,101\n135,101\n140,101\n145,101\n150,101\n155,101\n160,101\n"
                    "165,101\n170,101\n175,101\n180,101\n185,101\n190,101\n195,101\n"
                    "200,101\n205,101\n210,101\n215,101\n220,101\n225,101\n230,101\n"
                    "235,101\n240,101\n245,101\n250,101\n255,101\n260,101\n265,101\n"
                    "270,101\n275,101\n280,101\n285,101\n290,101\n295,101\n300,101\n"
                    "305,101\n310,101\n315,101\n320,101\n325,101\n330,101\n335,101\n"
                    "340,101\n345,101\n350,101\n355,101\n0,106\n5,106\n10,106\n"
                    "15,106\n20,106\n25,106\n30,106\n35,106\n40,106\n45,106\n"
                    "50,106\n55,106\n60,106\n65,106\n70,106\n75,106\n80,106\n"
                    "85,106\n90,106\n95,106\n100,106\n105,106\n110,106\n115,106\n"
                    "120,106\n125,106\n130,106\n135,106\n140,106\n145,106\n150,106\n"
                    "155,106\n160,106\n165,106\n170,106\n175,106\n180,106\n185,106\n"
                    "190,106\n195,106\n200,106\n205,106\n210,106\n215,106\n220,106\n"
                    "225,106\n230,106\n235,106\n240,106\n245,106\n250,106\n255,106\n"
                    "260,106\n265,106\n270,106\n275,106\n280,106\n285,106\n290,106\n"
                    "295,106\n300,106\n305,106\n310,106\n315,106\n320,106\n325,106\n"
                    "330,106\n335,106\n340,106\n345,106\n350,106\n355,106\n0,111\n"
                    "5,111\n10,111\n15,111\n20,111\n25,111\n30,111\n35,111\n"
                    "40,111\n45,111\n50,111\n55,111\n60,111\n65,111\n70,111\n"
                    "75,111\n80,111\n85,111\n90,111\n95,111\n100,111\n105,111\n"
                    "110,111\n115,111\n120,111\n125,111\n130,111\n135,111\n140,111\n"
                    "145,111\n150,111\n155,111\n160,111\n165,111\n170,111\n175,111\n"
                    "180,111\n185,111\n190,111\n195,111\n200,111\n205,111\n210,111\n"
                    "215,111\n220,111\n225,111\n230,111\n235,111\n240,111\n245,111\n"
                    "250,111\n255,111\n260,111\n265,111\n270,111\n275,111\n280,111\n"
                    "285,111\n290,111\n295,111\n300,111\n305,111\n310,111\n315,111\n"
                    "320,111\n325,111\n330,111\n335,111\n340,111\n345,111\n350,111\n"
                    "355,111\n0,131\n5,131\n10,131\n15,131\n20,131\n25,131\n"
                    "30,131\n35,131\n40,131\n45,131\n50,131\n55,131\n60,131\n"
                    "65,131\n70,131\n75,131\n80,131\n85,131\n90,131\n95,131\n"
                    "100,131\n105,131\n110,131\n115,131\n120,131\n125,131\n130,131\n"
                    "135,131\n140,131\n145,131\n150,131\n155,131\n160,131\n165,131\n"
                    "170,131\n175,131\n180,131\n185,131\n190,131\n195,131\n200,131\n"
                    "205,131\n210,131\n215,131\n220,131\n225,131\n230,131\n235,131\n"
                    "240,131\n245,131\n250,131\n255,131\n260,131\n265,131\n270,131\n"
                    "275,131\n280,131\n285,131\n290,131\n295,131\n300,131\n305,131\n"
                    "310,131\n315,131\n320,131\n325,131\n330,131\n335,131\n340,131\n"
                    "345,131\n350,131\n355,131\n0,136\n5,136\n10,136\n15,136\n"
                    "20,136\n25,136\n30,136\n35,136\n40,136\n45,136\n50,136\n"
                    "55,136\n60,136\n65,136\n70,136\n75,136\n80,136\n85,136\n"
                    "90,136\n95,136\n100,136\n105,136\n110,136\n115,136\n120,136\n"
                    "125,136\n130,136\n135,136\n140,136\n145,136\n150,136\n155,136\n"
                    "160,136\n165,136\n170,136\n175,136\n180,136\n185,136\n190,136\n"
                    "195,136\n200,136\n205,136\n210,136\n215,136\n220,136\n225,136\n"
                    "230,136\n235,136\n240,136\n245,136\n250,136\n255,136\n260,136\n"
                    "265,136\n270,136\n275,136\n280,136\n285,136\n290,136\n295,136\n"
                    "300,136\n305,136\n310,136\n315,136\n320,136\n325,136\n330,136\n"
                    "335,136\n340,136\n345,136\n350,136\n355,136\n0,141\n5,141\n"
                    "10,141\n15,141\n20,141\n25,141\n30,141\n35,141\n40,141\n"
                    "45,141\n50,141\n55,141\n60,141\n65,141\n70,141\n75,141\n"
                    "80,141\n85,141\n90,141\n95,141\n100,141\n105,141\n110,141\n"
                    "115,141\n120,141\n125,141\n130,141\n135,141\n140,141\n145,141\n"
                    "150,141\n155,141\n160,141\n165,141\n170,141\n175,141\n180,141\n"
                    "185,141\n190,141\n195,141\n200,141\n205,141\n210,141\n215,141\n"
                    "220,141\n225,141\n230,141\n235,141\n240,141\n245,141\n250,141\n"
                    "255,141\n260,141\n265,141\n270,141\n275,141\n280,141\n285,141\n"
                    "290,141\n295,141\n300,141\n305,141\n310,141\n315,141\n320,141\n"
                    "325,141\n330,141\n335,141\n340,141\n345,141\n350,141\n355,141\n"
                    "0,146\n5,146\n10,146\n15,146\n20,146\n25,146\n30,146\n"
                    "35,146\n40,146\n45,146\n50,146\n55,146\n60,146\n65,146\n"
                    "70,146\n75,146\n80,146\n85,146\n90,146\n95,146\n100,146\n"
                    "105,146\n110,146\n115,146\n120,146\n125,146\n130,146\n135,146\n"
                    "140,146\n145,146\n150,146\n155,146\n160,146\n165,146\n170,146\n"
                    "175,146\n180,146\n185,146\n190,146\n195,146\n200,146\n205,146\n"
                    "210,146\n215,146\n220,146\n225,146\n230,146\n235,146\n240,146\n"
                    "245,146\n250,146\n255,146\n260,146\n265,146\n270,146\n275,146\n"
                    "280,146\n285,146\n290,146\n295,146\n300,146\n305,146\n310,146\n"
                    "315,146\n320,146\n325,146\n330,146\n335,146\n340,146\n345,146\n"
                    "350,146\n355,146\n");
    arch.fromFileStream(archIS, gridIS);
  }
};

TEST_F(TestNAArchitecture, Import) {
  EXPECT_EQ(arch.getNZones(), 3);
  EXPECT_EQ(arch.getNSites(), 1296);
  EXPECT_EQ(arch.getName(), "Nature");
  EXPECT_EQ(arch.getZoneLabel(arch.getZoneOfSite(0)), "entangling");
  EXPECT_ANY_THROW(
      na::Architecture("file_does_not_Exist.json", "file_does_not_Exist.csv"));
  std::ofstream tmp("temp.json");
  tmp.close();
  EXPECT_ANY_THROW(na::Architecture("temp.json", "file_does_not_Exist.csv"));
  std::remove("temp.json");
  {
    std::istringstream archIS("{}");
    std::istringstream gridIS("x,y\n0;0");
    EXPECT_ANY_THROW(na::Architecture(archIS, gridIS));
  }
  {
    std::istringstream archIS("{");
    std::istringstream gridIS("x,y\n0,0");
    EXPECT_ANY_THROW(na::Architecture(archIS, gridIS));
  }
}

TEST_F(TestNAArchitecture, GateApplicability) {
  EXPECT_TRUE(arch.isAllowedGlobally({qc::OpType::RY, 0}, 1));
  EXPECT_TRUE(arch.isAllowedGlobally({qc::OpType::Z, 1}, 0));
  EXPECT_TRUE(arch.isAllowedLocally({qc::OpType::RZ, 0}, 1));
}

TEST_F(TestNAArchitecture, WithConfiguration) {
  na::Configuration const config(2, 3);
  const auto              modArch = arch.withConfig(config);
  EXPECT_EQ(modArch.getNSites(), 216);
}

TEST_F(TestNAArchitecture, SiteUp) {
  EXPECT_TRUE(arch.hasSiteUp({3, 3}, false, true).second);
  EXPECT_FALSE(arch.hasSiteUp({3, 0}, true, true).second);
  EXPECT_EQ(arch.getPositionOfSite(*arch.getNearestSiteUp({3, 3}, true, true)),
            (na::Point{3, 0}));
  EXPECT_EQ(arch.getNearestSiteUp({3, 0}, true, true), std::nullopt);
}

TEST_F(TestNAArchitecture, SiteDown) {
  EXPECT_FALSE(arch.hasSiteDown({0, 3}, false, true).second);
  EXPECT_TRUE(arch.hasSiteDown({3, 0}, true, true).second);
  EXPECT_EQ(arch.getNearestSiteDown({0, 3}, false, true), std::nullopt);
  EXPECT_EQ(
      arch.getPositionOfSite(*arch.getNearestSiteDown({3, 0}, true, true)),
      (na::Point{3, 12}));
}

TEST_F(TestNAArchitecture, SiteLeft) {
  EXPECT_TRUE(arch.hasSiteLeft({3, 0}, false, true).second);
  EXPECT_FALSE(arch.hasSiteLeft({3, 0}, true, true).second);
  EXPECT_EQ(
      arch.getPositionOfSite(*arch.getNearestSiteLeft({3, 0}, false, true)),
      (na::Point{3, 0}));
  EXPECT_EQ(arch.getNearestSiteLeft({3, 0}, true, true), std::nullopt);
}

TEST_F(TestNAArchitecture, SiteRight) {
  EXPECT_TRUE(arch.hasSiteRight({3, 0}, false, true).second);
  EXPECT_FALSE(arch.hasSiteRight({3, 3}, true, true).second);
  EXPECT_EQ(
      arch.getPositionOfSite(*arch.getNearestSiteRight({3, 0}, true, true)),
      (na::Point{13, 0}));
  EXPECT_EQ(arch.getNearestSiteRight({3, 3}, true, true), std::nullopt);
}
